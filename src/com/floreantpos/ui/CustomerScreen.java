package com.floreantpos.ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.naming.ldap.SortKey;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JTextField;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableRowSorter;

import com.floreantpos.POSConstants;
import com.floreantpos.config.AppConfig;
import com.floreantpos.config.TerminalConfig;
import com.floreantpos.main.Application;
import com.floreantpos.model.Restaurant;
import com.floreantpos.model.Ticket;
import com.floreantpos.model.TicketItem;
import com.floreantpos.model.dao.RestaurantDAO;
import com.floreantpos.swing.POSTextField;
import com.floreantpos.ui.dialog.BalanceDialogCust;
import com.floreantpos.ui.ticket.TicketViewerTable;
import com.floreantpos.ui.ticket.TicketViewerTableModel;
import com.floreantpos.ui.views.order.OrderView;
import com.floreantpos.util.NumberUtil;
import net.miginfocom.swing.MigLayout;
import net.xeoh.plugins.base.annotations.events.Init;

public class CustomerScreen extends javax.swing.JFrame {

	private static final String POSY = "bwy";//$NON-NLS-1$
	private static final String POSX = "bwx";//$NON-NLS-1$
	private static final String WINDOW_HEIGHT = "bwheight";//$NON-NLS-1$
	private static final String WINDOW_WIDTH = "bwwidth";//$NON-NLS-1$

	private static CustomerScreen instance;

	public CustomerScreen() {
		initComponents();
	}

	private void positionWindow() {
		int width = AppConfig.getInt(WINDOW_WIDTH, 600); // $NON-NLS-1$
		int height = AppConfig.getInt(WINDOW_HEIGHT, 400); // $NON-NLS-1$
		setSize(width, height);

		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int x = (screenSize.width - width) >> 1;
		int y = (screenSize.height - height) >> 1;

		x = AppConfig.getInt(POSX, x); // $NON-NLS-1$
		y = AppConfig.getInt(POSY, y); // $NON-NLS-1$

		setLocation(x, y);
	}

	private void shedule() {
		Runnable task1 = new Runnable(){

			@Override
			public void run(){
				Timer timer = new Timer(60000, new ActionListener() {
					public void actionPerformed(ActionEvent e) {
					}
				});
				timer.setRepeats(false);
				timer.start();
			}
		};

		Thread thread1 = new Thread(task1);
		thread1.start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	private static TicketViewerTable ticketViewerTable;
	private javax.swing.JScrollPane jScrollPane1;
	public static JLabel lblSumme;
	public static JTextField tfTotal;
	public static JLabel lblBezahlt;
	public static JTextField tfBezahlt;
	public static JLabel lblZuruck;
	public static JTextField tfZuruck;
	static boolean update = false;
	 
	
	private void initComponents() {
		setFocusable(false);
		jPanel1 = new javax.swing.JPanel();
		mainPanel = new JPanel();
		mainPanel.setLayout(new MigLayout("wrap"));
		mainPanel.setBackground(new Color(35, 35, 36));
		lblSumme = new JLabel(POSConstants.TOTAL+":   ");		 
		lblSumme.setFont(new Font("Myriad Pro Cond", Font.BOLD, 36));
		lblSumme.setBackground(new Color(35, 35, 36));
		lblSumme.setForeground(Color.WHITE);
		lblSumme.setFocusable(false);

		tfTotal = new JTextField();
		tfTotal.setPreferredSize(new Dimension(142, tfTotal.getHeight()));
		tfTotal.setFocusable(false);
		tfTotal.setBorder(null);
		tfTotal.setFont(new Font("Myriad Pro Cond", Font.BOLD, 45));
		tfTotal.setBackground(new Color(35, 35, 36));
		tfTotal.setForeground(new Color(102, 223, 102));
		tfTotal.setHorizontalAlignment(SwingConstants.RIGHT);

		lblBezahlt = new JLabel();
		lblBezahlt.setFont(new Font("Myriad Pro Cond", Font.BOLD, 36));
		lblBezahlt.setBackground(new Color(35, 35, 36));
		lblBezahlt.setForeground(Color.WHITE);
		lblBezahlt.setFocusable(false);

		tfBezahlt = new JTextField();
		tfBezahlt.setPreferredSize(new Dimension(120, tfBezahlt.getHeight()));
		tfBezahlt.setFocusable(false);
		tfBezahlt.setBorder(null);
		tfBezahlt.setFont(new Font("Myriad Pro Cond", Font.BOLD, 36));
		tfBezahlt.setBackground(new Color(35, 35, 36));
		tfBezahlt.setForeground(new Color(102, 223, 102));
		tfBezahlt.setHorizontalAlignment(SwingConstants.RIGHT);
		tfBezahlt.setAlignmentX(RIGHT_ALIGNMENT);

		lblZuruck= new JLabel();
		lblZuruck.setFont(new Font("Myriad Pro Cond", Font.BOLD, 36));
		lblZuruck.setBackground(new Color(35, 35, 36));
		lblZuruck.setForeground(Color.WHITE);
		lblZuruck.setFocusable(false);

		tfZuruck = new JTextField();		
		tfZuruck.setFocusable(false);
		tfZuruck.setBorder(null);
		tfZuruck.setPreferredSize(new Dimension(100, tfZuruck.getHeight()));
		tfZuruck.setFont(new Font("Myriad Pro Cond", Font.BOLD, 36));
		tfZuruck.setBackground(new Color(35, 35, 36));
		tfZuruck.setForeground(new Color(102, 223, 102));
		tfZuruck.setHorizontalAlignment(SwingConstants.RIGHT);

		mainPanel.add(lblSumme, "cell 0 0, growx");
		mainPanel.add(tfTotal, "cell 1 0, growx");
		mainPanel.add(lblBezahlt, "cell 2 0, growx");
		mainPanel.add(tfBezahlt, "cell 3 0, growx");
		mainPanel.add(lblZuruck, "cell 4 0, growx");
		mainPanel.add(tfZuruck, "cell 5 0, growx");		

		jPanel1.setLayout(new java.awt.BorderLayout(8, 0));
		jPanel1.setBorder(new TitledBorder(null, "BESTELLUNG", TitledBorder.CENTER,
				TitledBorder.TOP, new Font("Times New Roman", Font.BOLD, 30), new Color(102, 223, 102)));
		jPanel1.setBackground(new Color(35, 35, 36));		
		ticketViewerTable = new TicketViewerTable();
		
		//ticketViewerTable.setAutoCreateRowSorter(false);
		
		jScrollPane1 = new javax.swing.JScrollPane(ticketViewerTable);
		jScrollPane1.setFocusable(false);
		ticketViewerTable.setRowHeight(35);
		ticketViewerTable.setFont(new Font(null, Font.PLAIN, 20));
		ticketViewerTable.resizeTableColumnsForSecondScreen();
		ticketViewerTable.setFocusable(false);
		ticketViewerTable.setOpaque(true);
		ticketViewerTable.setSelectionBackground(Color.GRAY);
		ticketViewerTable.setForeground(Color.WHITE);
		ticketViewerTable.setFillsViewportHeight(true);
		ticketViewerTable.setBackground(new Color(35, 35, 36));
		ticketViewerTable.getTableHeader().setBackground(Color.BLACK);
		ticketViewerTable.getTableHeader().setForeground(Color.WHITE);
		ticketViewerTable.getTableHeader().setFont(new Font(null, Font.PLAIN, 20));
		ticketViewerTable.getRenderer().setInTicketScreen(true);
		DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
		centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
		ticketViewerTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
		ticketViewerTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
		ticketViewerTable.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
		jScrollPane1
		.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPane1
		.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
		JScrollBar scrollBar = jScrollPane1.getVerticalScrollBar();
		jScrollPane1.getVerticalScrollBar().setBackground(new Color(35, 35, 36));
		 
		scrollBar.setPreferredSize(new Dimension(30, 60));
		scrollBar.setBackground(Color.WHITE);
		jScrollPane1.setPreferredSize(new Dimension(Integer.parseInt(TerminalConfig.getKundenScreenWidth()), Integer.parseInt(TerminalConfig.getKundenScreenHeight())));
		jScrollPane1.setMaximumSize(new Dimension(Integer.parseInt(TerminalConfig.getKundenScreenWidth()), Integer.parseInt(TerminalConfig.getKundenScreenHeight())));
		jPanel1.add(jScrollPane1);

		getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);
		getContentPane().add(mainPanel, java.awt.BorderLayout.SOUTH);
		getContentPane().setBackground(new Color(209, 222, 235));
		pack();
		transferFocus();
	}// </editor-fold>//GEN-END:initComponents

	public void close() {
		saveSizeAndLocation();
		instance = null;
		dispose();
	}
	public static void updateRest(Double paidAmnt, Double zuruckAmnt) {
		 
		 if(paidAmnt!=null&&paidAmnt>0.00&&zuruckAmnt!=null&&zuruckAmnt>0.00) {
			lblBezahlt.setText("   Bezahlt:");
			tfBezahlt.setText(NumberUtil.formatNumber(paidAmnt)+" € ");	
			lblZuruck.setText("   Zuruck:");
			tfZuruck.setText(NumberUtil.formatNumber(zuruckAmnt)+" € ");
			
		} else if(paidAmnt!=null&&paidAmnt>0.00) {
			lblBezahlt.setText("   Bezahlt:");
			tfBezahlt.setText(NumberUtil.formatNumber(paidAmnt)+" € ");
		} 
		
	}

	private void saveSizeAndLocation() {
		AppConfig.putInt(WINDOW_WIDTH, CustomerScreen.this.getWidth());
		AppConfig.putInt(WINDOW_HEIGHT, CustomerScreen.this.getHeight()); // $NON-NLS-1$
		AppConfig.putInt(POSX, CustomerScreen.this.getX()); // $NON-NLS-1$
		AppConfig.putInt(POSY, CustomerScreen.this.getY()); // $NON-NLS-1$
	}

	public void setFont(JButton button) {
		button.setFont(new Font("Times New Roman", Font.BOLD, 14));
		int height = TerminalConfig.getTouchScreenButtonHeight();
		button.setPreferredSize(new Dimension(height, 50));
		button.setBackground(Color.getHSBColor(159, 63, 90));
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel jPanel1;
	private static javax.swing.JPanel mainPanel;	

	/*public static void updateView(int Count, Ticket ticket) {		
		tfTotal.setText(NumberUtil.formatNumber(ticket.getTotalAmountWithoutPfand())+" € ");
		ticketViewerTable.removeAll();
		ticketViewerTable.setTicket(ticket);
		ticketViewerTable.updateView();
		lblSumme.setText(POSConstants.TOTAL+"("+Count+")");
		lblBezahlt.setText("");
		tfBezahlt.setText("");	
		lblZuruck.setText("");
		tfZuruck.setText("");
		OrderView.getInstance().getTicketView().focusToScanid();
	}	*/
	
	/*if (ticket.getTotalAmountWithoutPfand() > 0.0 && Application.getInstance().getRestaurant().isShowReturnDialog()) {			
		BalanceDialog dialog = new BalanceDialog(ticket,ticket.getTotalAmount()+ticket.getTipAmount(), ticket.getTotalAmountWithoutPfand(), 3.00);
		dialog.setPreferredSize(new Dimension(400, 300));
		dialog.pack();
		dialog.open();

	}*/
	
	public static void updateView(int Count, Ticket ticket, int rowIndex, String discountText) {
		tfTotal.setText(NumberUtil.formatNumber(ticket.getTotalAmountWithoutPfand())+" € ");
		ticketViewerTable.removeAll();
		ticketViewerTable.setTicket(ticket);
		ticketViewerTable.updateView();
		ticketViewerTable.selectRow(rowIndex);		
		lblSumme.setText(POSConstants.TOTAL+"("+Count+")");
		//lblDiscount.setText(discountText);
		lblBezahlt.setText("");
		tfBezahlt.setText("");	
		lblZuruck.setText("");
		tfZuruck.setText("");
		OrderView.getInstance().getTicketView().focusToScanid();
		
	}
}