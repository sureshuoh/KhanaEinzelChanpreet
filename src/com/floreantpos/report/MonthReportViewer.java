/*
 * ReportViewer.java
 *
 * Created on September 17, 2006, 11:38 PM
 */

package com.floreantpos.report;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JPanel;

import org.apache.commons.lang3.StringUtils;

import net.miginfocom.swing.MigLayout;

import com.floreantpos.POSConstants;
import com.floreantpos.bo.ui.BackOfficeWindow;
import com.floreantpos.main.Application;
import com.floreantpos.model.Ticket;
import com.floreantpos.model.dao.TicketDAO;
import com.floreantpos.model.util.DateUtil;
import com.floreantpos.swing.MessageDialog;
import com.floreantpos.ui.dialog.MonthReportViewerDialog;
import com.floreantpos.ui.dialog.OpenTicketDialog;
import com.floreantpos.ui.dialog.POSMessageDialog;
/**
 *
 * @author  MShahriar
 */
public class MonthReportViewer extends javax.swing.JPanel  {
    private Report report;
    MonthReportViewerDialog dialog;
    /** Creates new form ReportViewer */
    public MonthReportViewer() {
        initComponents();
    }

    public MonthReportViewer(Report report) {
    	initComponents();
    	setReport(report);
    }
    public void setDialog(MonthReportViewerDialog dialog)
    {
    	this.dialog = dialog;
    }
    public MonthReportViewerDialog getDialog()
    {
    	return dialog;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    JCheckBox cbJaherAbs;
    private void initComponents() {
    	setVisible(true);
        reportConstraintPanel = new com.floreantpos.swing.TransparentPanel();
        jLabel2 = new javax.swing.JLabel();       
        dpMonth = new JComboBox();
        dpMonth.setPreferredSize(new Dimension(100,35));
        dpMonth.setFont(new Font("Times New Roman", Font.BOLD, 22));
        dpMonth.setBackground(Color.WHITE);
        DateUtil.populateMonth(dpMonth);  
        
        
        cbJaherAbs = new JCheckBox("JAHRES-ABS");
		cbJaherAbs.setBackground(Color.WHITE);
		cbJaherAbs.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if(cbJaherAbs.isSelected()) {
					dpMonth.setEnabled(false);
					report.setJaherAbs(true);
				}else {
					dpMonth.setEnabled(true);
					report.setJaherAbs(false);
				}					
			}
		});
        
        dpYear = new JComboBox();
        dpYear.setPreferredSize(new Dimension(100,35));
        dpYear.setFont(new Font("Times New Roman", Font.BOLD, 22));
        dpYear.setBackground(Color.WHITE);
        DateUtil.populateYear(dpYear);
        
        jLabel3 = new javax.swing.JLabel();
        jLabel2.setFont(new Font("Times New Roman", Font.BOLD, 16));
        jLabel3.setFont(new Font("Times New Roman", Font.BOLD, 16));
        btnRefresh = new javax.swing.JButton();
        btnRefresh.setSize(new Dimension(50,50));
        
        btnRefresh.setBackground(new Color(102,255,102));
        reportPanel = new com.floreantpos.swing.TransparentPanel();

        setLayout(new java.awt.BorderLayout(5, 5));

        jLabel2.setText("Monat" + ":");
        if(StringUtils.isNotEmpty(POSConstants.Monat))
        	jLabel2.setText(POSConstants.Monat);
		 
        jLabel3.setText("Jahr" + ":");
        if(StringUtils.isNotEmpty(POSConstants.Jahr))
        	jLabel3.setText(POSConstants.Jahr);

        btnRefresh.setText("Z-ABSCHLAG");
        if(StringUtils.isNotEmpty(POSConstants.Z_ABSCHLUSS_Monat))
        	btnRefresh.setText(POSConstants.Z_ABSCHLUSS_Monat);
        
        btnRefresh.setFont(new Font("Times New Roman", Font.BOLD, 24));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doRefreshReport(true);
            }
        });
        
        btnPreview = new JButton();
        btnPreview.setText("X-ABSCHLAG");
        if(StringUtils.isNotEmpty(POSConstants.X_ABSCHLAG_monat))
        	btnRefresh.setText(POSConstants.X_ABSCHLAG_monat);
        
        btnPreview.setFont(new Font("Times New Roman", Font.BOLD, 24));
        btnPreview.setBackground(new Color(102,178,255));
       
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doRefreshReport(false);
            }
        });
        
        btnPrint = new JButton();
        btnPrint.setText("DRUCK");
        if(StringUtils.isNotEmpty(POSConstants.PRINT))
        	btnPrint.setText(POSConstants.PRINT);
        
        btnPrint.setFont(new Font("Times New Roman", Font.BOLD, 24));
        btnPrint.setBackground(new Color(102,178,255));
       
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	try
            	{
            		if(report.getJasperPrint() != null)
            		{
            			report.getJasperPrint().setProperty("printerName", Application.getPrinters().getReceiptPrinter());
            			JReportPrintService.printQuitely(report.getJasperPrint());
            		}
            	}
            	catch(Exception e){}
            }
        });
        org.jdesktop.layout.GroupLayout reportConstraintPanelLayout = new org.jdesktop.layout.GroupLayout(reportConstraintPanel);
        reportConstraintPanel.setLayout(reportConstraintPanelLayout);
        reportConstraintPanelLayout.setHorizontalGroup(
            reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(reportConstraintPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(reportConstraintPanelLayout.createSequentialGroup()
                        .add(reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2))
                        .add(15, 15, 15)
                        .add(reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(dpMonth, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(dpYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cbJaherAbs)
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)) 
                        .add(reportConstraintPanelLayout.createSequentialGroup()
                        .add(btnPreview)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnRefresh)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnPrint)))
                      
                .addContainerGap())
        );
        reportConstraintPanelLayout.setVerticalGroup(
            reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(reportConstraintPanelLayout.createSequentialGroup()
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .addContainerGap()
                .add(reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(dpMonth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(reportConstraintPanelLayout.createSequentialGroup()
                        .add(reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(dpYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2)
                            .add(cbJaherAbs))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                          .add(reportConstraintPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(btnPreview)
                            .add(btnRefresh)
                            .add(btnPrint)))
                        )
                         
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        reportConstraintPanelLayout.linkSize(new java.awt.Component[] {dpYear, dpMonth, jLabel2, jLabel3}, org.jdesktop.layout.GroupLayout.VERTICAL);

        JPanel panel1 = new JPanel();
        panel1.setLayout(new MigLayout());
        panel1.setBackground(new Color(209,222,235));
        panel1.add(reportConstraintPanel);
        
        add(panel1, java.awt.BorderLayout.NORTH);
        reportPanel.setLayout(new java.awt.BorderLayout());
        setBackground(new Color(209,222,235));
        reportPanel.setBackground(new Color(209,222,235));
        add(reportPanel, java.awt.BorderLayout.CENTER);      
    }
   
   
    public boolean doRefreshReport(boolean flag) {//GEN-FIRST:event_doRefreshReport
    	
    	int reportT = 0;
    	if(flag == true)
    		reportT = Report.REPORT_TYPE_2;
    	
    	
    	if (flag == true)
		{
    		List<Ticket> tickets = TicketDAO.getInstance().findAllOpenTickets();
    		if (tickets.size() > 0)
    		{
    			OpenTicketDialog dialog = new OpenTicketDialog(tickets);
    			dialog.pack();
    			dialog.open();
    			return false;
    		}
		}
    	Calendar c = Calendar.getInstance();
    	Calendar d = Calendar.getInstance();
    	int year = Integer.parseInt(dpYear.getSelectedItem().toString());
    	int month = DateUtil.getMonth(dpMonth.getSelectedItem().toString());
    	
    	Date fromDate = null;
		Date toDate = null;	
    	
    	if(cbJaherAbs.isSelected()) {
			c.set(year,0,1);
			d.set(year, 11,31);
			fromDate = c.getTime();
			toDate = d.getTime();
			System.out.println("From: "+fromDate+" To: "+toDate);
		}else {
			c.set(year, month - 1, 1);
			fromDate = c.getTime();
			d.set(year, month, 1);
			d.add(Calendar.DAY_OF_MONTH, -1);
			toDate = d.getTime();
			System.out.println("From: "+fromDate+" To: "+toDate);
		}
    	
//    	c.set(year, month - 1, 1); 
//    	Date fromDate = c.getTime();
//    	d.set(year, month - 1, 1); 
//    	d.set(Calendar.DAY_OF_MONTH, c.getActualMaximum(Calendar.DAY_OF_MONTH));
//    	Date toDate = d.getTime();
		
		if(fromDate.after(toDate)) {
			POSMessageDialog.showError(BackOfficeWindow.getInstance(), com.floreantpos.POSConstants.FROM_DATE_CANNOT_BE_GREATER_THAN_TO_DATE_);
			return false;
		}
		
    	try {
    		reportPanel.removeAll();
    		reportPanel.revalidate();
    		
    		reportPanel.setBackground(new Color(209,222,235));
			if (report != null) {
				int reportType = 0;
				if(flag == true)
		    		reportType = Report.REPORT_TYPE_2;
				
				report.setReportType(reportType);
				report.setStartDate(fromDate);
				report.setEndDate(toDate);
				report.refresh();
				
				if (report != null && report.getViewer() != null) {
					reportPanel.add(report.getViewer());
					reportPanel.revalidate();
					report.getViewer().setBackground(new Color(209,222,235));
					reportPanel.setBackground(new Color(209,222,235));
				}
			}
			
		} catch (Exception e) {
			MessageDialog.showError(com.floreantpos.POSConstants.ERROR_MESSAGE, e);
		}
		return true;
    }//GEN-LAST:event_doRefreshReport
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnPrint; 
    private JComboBox dpMonth;
    private JComboBox dpYear;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private com.floreantpos.swing.TransparentPanel reportConstraintPanel;
    private com.floreantpos.swing.TransparentPanel reportPanel;
    // End of variables declaration//GEN-END:variables

	public Report getReport() {
		return report;
	}

	public void setReport(Report report) {
		this.report = report;
		if(report != null && report.getType() != 1)
			btnPreview.setVisible(false);
	}
}
